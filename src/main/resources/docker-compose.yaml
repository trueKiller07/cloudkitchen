version: "3.1"
services:
  kafka:
    image: 'bitnami/kafka:latest'
    container_name: kafka
    ports:
      - '9092:9092'
    environment:
      - KAFKA_ENABLE_KRAFT=yes
#      - KAFKA_BROKER_ID=0
      - KAFKA_CFG_NODE_ID=0
      - KAFKA_CFG_PROCESS_ROLES=controller,broker
      - KAFKA_CFG_LISTENERS=PLAINTEXT://:9092,CONTROLLER://:9093
      - KAFKA_CFG_LISTENER_SECURITY_PROTOCOL_MAP=CONTROLLER:PLAINTEXT,PLAINTEXT:PLAINTEXT
      - KAFKA_CFG_CONTROLLER_QUORUM_VOTERS=0@kafka:9093
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_CONTROLLER_LISTENER_NAMES=CONTROLLER
    networks:
      - spring-kafka-network
    volumes:
      - /Users/sameersharma/IdeaProjects/data/kafka:/bitnami/kafka/data

  producer:
    image: spring-kafka-docker
    container_name: spring-kafka-docker
#    build:
#      context: .
#      dockerfile: Dockerfile
    ports:
      - "8081:8080"
    networks:
      - spring-kafka-network
    depends_on:
      - kafka
    volumes:
      - /Users/sameersharma/IdeaProjects/data/app:/logs/cloudkitchen

networks:
  spring-kafka-network:
    driver: bridge

#networks:
#  specific-network-name:
#    external: false
#    name: specific-network-name